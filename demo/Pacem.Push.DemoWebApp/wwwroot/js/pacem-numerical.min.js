/**
 * pacem v0.20.0-alexandria (https://js.pacem.it)
 * Copyright 2021 Pacem (https://pacem.it)
 * Licensed under MIT
 */
var Pacem;!function(t){!function(m){!function(m){m.Vector=class Vector{static unit(t){const m={x:t.x,y:t.y};return this.normalize(m),m}static normalize(t){const m=Math.sqrt(t.x*t.x+t.y*t.y);if(m<=0)throw"Cannot normalize a vector of length 0.";const r=1/m;t.x*=r,t.y*=r}static from(m,r){return t.Point.subtract(m,r)}static dot(t,m){return t.x*m.x+t.y*m.y}static cross(t,m){return t.x*m.y-t.y*m.x}}}(m.LinearAlgebra||(m.LinearAlgebra={}))}(t.Geometry||(t.Geometry={}))}(Pacem||(Pacem={})),function(t){!function(m){const r=180/Math.PI,e=2*Math.PI,n=m.LinearAlgebra.Vector;function a(t){return null!=t&&"x"in t&&"number"==typeof t.x&&"y"in t&&"number"==typeof t.y}m.Utils=class Utils{static slopeRad(t,m){return Math.atan2(m.y-t.y,m.x-t.x)}static slopeRad2(t,m){return(e+this.slopeRad(t,m))%e}static slopeDeg(t,m){return this.slopeRad(t,m)*r}static slopeDeg2(t,m){return(360+this.slopeDeg(t,m))%360}static intersect(t,m,...r){return Array.isArray(t)&&Array.isArray(m)?this._intersectSegments(t,m,!0):this._intersectRects.apply(this,arguments)}static intersectLines(t,m,r,e){let n,a;if(Array.isArray(t)&&Array.isArray(m)&&2===t.length&&2===m.length&&"number"==typeof t[0]&&"number"==typeof m[0]&&"number"==typeof t[1]&&"number"==typeof m[1]&&(r=m[0],e=m[1],m=t[1],t=t[0]),"number"==typeof t&&"number"==typeof m){n=[{x:0,y:m},{x:1,y:t+m}],a=[{x:0,y:e},{x:1,y:r+e}]}else n=t,a=m;return this._intersectSegments(n,a,!1)}static cramer(t,m){Array.isArray(t)&&(t={a:t[0],b:t[1],c:t[2]}),Array.isArray(m)&&(m={a:m[0],b:m[1],c:m[2]});let r=(t.b*m.c-t.c*m.b)/(t.b*m.a-t.a*m.b),e=(t.c*m.a-t.a*m.c)/(t.b*m.a-t.a*m.b);return{x:-r.roundoff(),y:-e.roundoff()}}static mq(t,m){let r;if(a(t)?r=t:(r=t[0],m=t[1]),r.x===m.x)return[Number.NaN,Number.NaN];const e=(m.y-r.y)/(m.x-r.x);return[e,r.y-e*r.x]}static _intersectSegments(t,m,r){const e=t[0],n=t[1],a=m[0],s=m[1],i=Math.min(e.x,n.x),o=Math.min(e.y,n.y),f=Math.max(e.x,n.x),c=f-i,u=Math.max(e.y,n.y),l=u-o,y=Math.min(a.x,s.x),h=Math.min(a.y,s.y),x=Math.max(a.x,s.x),M=x-y,g=Math.max(a.y,s.y),p=g-h;if(0===c&&0===M)return null;if(0===l&&0===p)return null;const d=t=>t.x<y||t.x>x||t.x<i||t.x>f,b=t=>t.y<h||t.y>g||t.y<o||t.y>u;var z=null;if(0===c){if(r&&(y>i||x<f))return null;const t=this.mq(a,s);z=this.cramer([1,0,-i],[t[0],-1,t[1]]),r&&b(z)&&(z=null)}else if(0===M){if(r&&(i>y||f<x))return null;const t=this.mq(e,n);z=this.cramer([t[0],-1,t[1]],[1,0,-y]),r&&b(z)&&(z=null)}else if(0===l){if(r&&(h>o||g<u))return null;const t=this.mq(a,s);z=this.cramer([0,1,-o],[t[0],-1,t[1]]),r&&d(z)&&(z=null)}else if(0===p){if(r&&(o>h||u<g))return null;const t=this.mq(e,n);z=this.cramer([t[0],-1,t[1]],[0,1,-h]),r&&d(z)&&(z=null)}else{let t;if(!r||(t=this._intersectRects({x:i,y:o,width:c,height:l},{x:y,y:h,width:M,height:p}))&&t.width>0&&t.height>0){const m=this.mq(e,n),i=this.mq(a,s),o=m[0],f=i[0],c=m[1],u=i[1];if(o!==f){let m=(z=this.cramer([o,-1,c],[f,-1,u])).x,e=z.y;r&&(m<t.x||m>t.x+t.width||e<t.y||e>t.y+t.height)&&(z=null)}}}return null===z?null:{x:z.x,y:z.y}}static _intersectRects(...m){return t.Rect.intersect.apply(this,m)}static dot(t,m){return n.dot(t,m)}static cross(t,m){return n.cross(t,m)}static distance(m,r){if(null!=(e=m)&&Array.isArray(e)&&2===e.length&&a(e[0])&&a(e[1]))return t.Point.distance(m[0],m[1]);if(a(r))return t.Point.distance(m,r);{const t=r[0],e=r[1];return Math.abs(t*m.x-m.y+e)/Math.sqrt(Math.pow(t,2)+1)}var e}static inLine(t,m){const r=n.from(m[0],t),e=n.from(t,m[1]);return this.cross(r,e).isCloseTo(0)}static inSegment(t,m){const r=Math.min(m[0].x,m[1].x),e=Math.max(m[0].x,m[1].x),n=Math.min(m[0].y,m[1].y),a=Math.max(m[0].y,m[1].y);return t.x>=r&&t.x<=e&&t.y>=n&&t.y<=a&&this.inLine(t,m)}static inTriangle(m,r){let e;for(let n=0;n<3;n++){const a=r[n],s=r[(n+1)%3],i=t.Point.subtract(s,m),o=t.Point.subtract(a,m),f=this.cross(i,o);if(n>0&&f*e<=0)return!1;e=f}return!0}static inPolygon(t,m){if(!((null==m?void 0:m.length)>=3))throw"Not enough vertices";const r=m.length;if(3===r)return this.inTriangle(t,[m[0],m[1],m[2]]);let e=Number.POSITIVE_INFINITY,n=Number.POSITIVE_INFINITY,a=0,s=0;for(let t=0;t<r;t++){const r=m[t];e=Math.min(e,r.x),n=Math.min(n,r.y),a=Math.max(a,r.x),s=Math.max(s,r.y)}if(t.x<e||t.x>a||t.y<n||t.y>s)return!1;const i=[{x:e-1,y:t.y},t];let o=0;for(let e=0;e<r;e++){const n=m[e],a=m[(e+1)%r],s=[n,a];if(n.y===t.y){const s=m[(e-1+r)%r];t.x>n.x&&(s.y-t.y)*(a.y-t.y)<0&&o++}else{if(a.y===t.y)continue;null!=this.intersect(s,i)&&o++}}return o%2==1}}}(t.Geometry||(t.Geometry={}))}(Pacem||(Pacem={})),function(t){!function(m){!function(m){const r=180/Math.PI,e=1/r;class Vector3D{static from(...t){if(3!==t.length)throw new RangeError("Must provide exactly 3 numbers");return{x:t[0],y:t[1],z:t[2]}}static parse(m){const r=t.parseAsNumericalArray(m);if(r&&3===r.length)return Vector3D.from.apply(null,r);throw new Error(`Cannot parse "${m}" as a valid Vector3D.`)}static i(){return{x:1,y:0,z:0}}static j(){return{x:0,y:1,z:0}}static k(){return{x:0,y:0,z:1}}static subtract(t,m){return{x:m.x-t.x,y:m.y-t.y,z:m.z-t.z}}static add(...t){var m={x:0,y:0,z:0};for(var r of t)m.x+=r.x,m.y+=r.y,m.z+=r.z;return m}static dot(t,m){return t.x*m.x+t.y*m.y+t.z*m.z}static cross(t,m){return{x:t.y*m.z-t.z*m.y,y:t.z*m.x-t.x*m.z,z:t.x*m.y-t.y*m.x}}static magSqr(t){return t.x*t.x+t.y*t.y+t.z*t.z}static mag(t){return Math.sqrt(Vector3D.magSqr(t))}static unit(t){const m={x:t.x,y:t.y,z:t.z};return this.normalize(m),m}static normalize(t){const m=Vector3D.mag(t);if(m<=0)throw"Cannot normalize a vector of length 0.";const r=1/m;t.x*=r,t.y*=r,t.z*=r}static angleBetween(t,m){var e,n=Vector3D.unit(t),a=Vector3D.unit(m);if(Vector3D.dot(n,a)<0){const t={x:-n.x-a.x,y:-n.y-a.y,z:-n.z-a.z},m=Vector3D.mag(t);e=Math.PI-2*Math.asin(m/2)}else{var s={x:n.x-a.x,y:n.y-a.y,z:n.z-a.z};const t=Vector3D.mag(s);e=2*Math.asin(t/2)}return r*e}}m.Vector3D=Vector3D;class Matrix3D{static identity(){return{m11:1,m12:0,m13:0,m14:0,m21:0,m22:1,m23:0,m24:0,m31:0,m32:0,m33:1,m34:0,offsetX:0,offsetY:0,offsetZ:0,m44:1}}static from(...t){if(16!==t.length)throw new RangeError("Must provide exactly 16 numbers");return{m11:t[0],m12:t[1],m13:t[2],m14:t[3],m21:t[4],m22:t[5],m23:t[6],m24:t[7],m31:t[8],m32:t[9],m33:t[10],m34:t[11],offsetX:t[12],offsetY:t[13],offsetZ:t[14],m44:t[15]}}static toArray(t){return[t.m11,t.m12,t.m13,t.m14,t.m21,t.m22,t.m23,t.m24,t.m31,t.m32,t.m33,t.m34,t.offsetX,t.offsetY,t.offsetZ,t.m44]}static clone(t){return Matrix3D.from.apply(null,Matrix3D.toArray(t))}static parse(m){const r=t.parseAsNumericalArray(m);if(r&&16===r.length)return Matrix3D.from.apply(null,r);throw new Error(`Cannot parse "${m}" as a valid Matrix3D.`)}static isIdentity(t){return 1==t.m11&&0==t.m12&&0==t.m13&&0==t.m14&&0==t.m21&&1==t.m22&&0==t.m23&&0==t.m24&&0==t.m31&&0==t.m32&&1==t.m33&&0==t.m34&&0==t.offsetX&&0==t.offsetY&&0==t.offsetZ&&1==t.m44}static isAffine(t){return 0==t.m14&&0==t.m24&&0==t.m34&&1==t.m44}static determinant(t){if(Matrix3D.isIdentity(t))return 1;if(Matrix3D.isAffine(t))return t.m11*(t.m22*t.m33-t.m32*t.m23)-t.m12*(t.m21*t.m33-t.m31*t.m23)+t.m13*(t.m21*t.m32-t.m31*t.m22);{const m=t.m13*t.m24-t.m23*t.m14,r=t.m13*t.m34-t.m33*t.m14,e=t.m13*t.m44-t.offsetZ*t.m14,n=t.m23*t.m34-t.m33*t.m24,a=t.m23*t.m44-t.offsetZ*t.m24,s=t.m33*t.m44-t.offsetZ*t.m34,i=t.m22*r-t.m32*m-t.m12*n,o=t.m12*a-t.m22*e+t.offsetY*m,f=t.m32*e-t.offsetY*r-t.m12*s,c=t.m22*s-t.m32*a+t.offsetY*n;return t.offsetX*i+t.m31*o+t.m21*f+t.m11*c}}static multiply(t,m){return Matrix3D.isIdentity(t)?m:Matrix3D.isIdentity(m)?t:Matrix3D.from(t.m11*m.m11+t.m12*m.m21+t.m13*m.m31+t.m14*m.offsetX,t.m11*m.m12+t.m12*m.m22+t.m13*m.m32+t.m14*m.offsetY,t.m11*m.m13+t.m12*m.m23+t.m13*m.m33+t.m14*m.offsetZ,t.m11*m.m14+t.m12*m.m24+t.m13*m.m34+t.m14*m.m44,t.m21*m.m11+t.m22*m.m21+t.m23*m.m31+t.m24*m.offsetX,t.m21*m.m12+t.m22*m.m22+t.m23*m.m32+t.m24*m.offsetY,t.m21*m.m13+t.m22*m.m23+t.m23*m.m33+t.m24*m.offsetZ,t.m21*m.m14+t.m22*m.m24+t.m23*m.m34+t.m24*m.m44,t.m31*m.m11+t.m32*m.m21+t.m33*m.m31+t.m34*m.offsetX,t.m31*m.m12+t.m32*m.m22+t.m33*m.m32+t.m34*m.offsetY,t.m31*m.m13+t.m32*m.m23+t.m33*m.m33+t.m34*m.offsetZ,t.m31*m.m14+t.m32*m.m24+t.m33*m.m34+t.m34*m.m44,t.offsetX*m.m11+t.offsetY*m.m21+t.offsetZ*m.m31+t.m44*m.offsetX,t.offsetX*m.m12+t.offsetY*m.m22+t.offsetZ*m.m32+t.m44*m.offsetY,t.offsetX*m.m13+t.offsetY*m.m23+t.offsetZ*m.m33+t.m44*m.offsetZ,t.offsetX*m.m14+t.offsetY*m.m24+t.offsetZ*m.m34+t.m44*m.m44)}static invert(t){if(Matrix3D.isAffine(t)){const m=t.m12*t.m23-t.m22*t.m13,r=t.m32*t.m13-t.m12*t.m33,e=t.m22*t.m33-t.m32*t.m23,n=Matrix3D.determinant(t);if(0==n)return null;const a=t.m21*t.m13-t.m11*t.m23,s=t.m11*t.m33-t.m31*t.m13,i=t.m31*t.m23-t.m21*t.m33,o=t.m11*t.m22-t.m21*t.m12,f=t.m11*t.m32-t.m31*t.m12,c=t.m11*t.offsetY-t.offsetX*t.m12,u=t.m21*t.m32-t.m31*t.m22,l=t.m21*t.offsetY-t.offsetX*t.m22,y=t.m31*t.offsetY-t.offsetX*t.m32,h=t.m23*c-t.offsetZ*o-t.m13*l,x=t.m13*y-t.m33*c+t.offsetZ*f,M=t.m33*l-t.offsetZ*u-t.m23*y,g=o,p=-f,d=u,b=1/n;return Matrix3D.from(e*b,r*b,m*b,0,i*b,s*b,a*b,0,d*b,p*b,g*b,0,M*b,x*b,h*b,1)}{const m=Matrix3D.determinant(t);if(0==m)return null;const r=t.m33*t.m44-t.m34*t.offsetZ,e=t.m32*t.m44-t.m34*t.offsetY,n=t.m31*t.m44-t.m34*t.offsetX,a=t.m32*t.offsetZ-t.m33*t.offsetY,s=t.m31*t.offsetZ-t.m33*t.offsetX,i=t.m31*t.offsetY-t.m32*t.offsetX,o=t.m33*t.m44-t.m34*t.offsetZ,f=t.m32*t.m44-t.m34*t.offsetY,c=t.m31*t.m44-t.m34*t.offsetX,u=t.m32*t.offsetZ-t.m33*t.offsetY,l=t.m31*t.offsetZ-t.m33*t.offsetX,y=t.m31*t.offsetY-t.m32*t.offsetX,h=t.m23*t.m44-t.m24*t.offsetZ,x=t.m22*t.m44-t.m24*t.offsetY,M=t.m21*t.m44-t.m24*t.offsetX,g=t.m22*t.offsetZ-t.m23*t.offsetY,p=t.m21*t.offsetZ-t.m23*t.offsetX,d=t.m21*t.offsetY-t.m22*t.offsetX,b=t.m23*t.m34-t.m24*t.m33,z=t.m22*t.m34-t.m24*t.m32,w=t.m21*t.m34-t.m24*t.m31,D=t.m22*t.m33-t.m23*t.m32,v=t.m21*t.m33-t.m23*t.m31,A=t.m21*t.m32-t.m22*t.m31,P=t.m22*r-t.m23*e+t.m24*a,N=-(t.m21*r-t.m23*n+t.m24*s),Y=t.m21*e-t.m22*n+t.m24*i,Z=-(t.m21*a-t.m22*s+t.m23*i),X=-(t.m12*o-t.m13*f+t.m14*u),q=t.m11*o-t.m13*c+t.m14*l,C=-(t.m11*f-t.m12*c+t.m14*y),I=t.m11*u-t.m12*l+t.m13*y,V=t.m12*h-t.m13*x+t.m14*g,Q=-(t.m11*h-t.m13*M+t.m14*p),R=t.m11*x-t.m12*M+t.m14*d,S=-(t.m11*g-t.m12*p+t.m13*d),_=-(t.m12*b-t.m13*z+t.m14*D),E=t.m11*b-t.m13*w+t.m14*v,G=-(t.m11*z-t.m12*w+t.m14*A),T=t.m11*D-t.m12*v+t.m13*A,j=1/m;return Matrix3D.from(P*j,X*j,V*j,_*j,N*j,q*j,Q*j,E*j,Y*j,C*j,R*j,G*j,Z*j,I*j,S*j,T*j)}}static transform(t,m){var r={x:t.x,y:t.y,z:t.z};if(!Matrix3D.isIdentity(m)){var e=r.x,n=r.y,a=r.z;if(r.x=e*m.m11+n*m.m21+a*m.m31+m.offsetX,r.y=e*m.m12+n*m.m22+a*m.m32+m.offsetY,r.z=e*m.m13+n*m.m23+a*m.m33+m.offsetZ,!Matrix3D.isAffine(m)){var s=e*m.m14+n*m.m24+a*m.m34+m.m44;0!=s&&(r.x/=s,r.y/=s,r.z/=s)}}return r}}m.Matrix3D=Matrix3D;class Quaternion{static from(...t){if(4!==t.length)throw new RangeError("Must provide exactly 4 numbers");return{x:t[0],y:t[1],z:t[2],w:t[3]}}static parse(m){const r=t.parseAsNumericalArray(m);if(r&&4===r.length)return Quaternion.from.apply(null,r);throw new Error(`Cannot parse "${m}" as a valid Quaternion.`)}static fromAxisAngle(t,m){var r=e*(m%=360),n=Vector3D.mag(t);if(0==n)throw new RangeError("Invalid argument");var a=Math.sin(.5*r)/n,s=t.x*a,i=t.y*a,o=t.z*a;return Quaternion.from(s,i,o,Math.cos(.5*r))}static fromRotationMatrix(t){const m=t.m11+t.m22+t.m33+t.m44;if(m>0){const r=.5/Math.sqrt(m),e=.25/r,n=(t.m23-t.m32)*r,a=(t.m31-t.m13)*r,s=(t.m12-t.m21)*r;return Quaternion.from(n,a,s,e)}if(t.m11>t.m22&&t.m11>t.m22){const m=.5/Math.sqrt(t.m44+t.m11-t.m22-t.m33),r=(t.m23-t.m32)*m,e=.25/m,n=(t.m12+t.m21)*m,a=(t.m31+t.m13)*m;return Quaternion.from(e,n,a,r)}if(t.m22>t.m33){const m=.5/Math.sqrt(t.m44+t.m22-t.m11-t.m33),r=(t.m23+t.m32)*m,e=.25/m,n=(t.m12+t.m21)*m,a=(t.m31-t.m13)*m;return Quaternion.from(n,e,r,a)}{const m=.5/Math.sqrt(t.m44+t.m33-t.m11-t.m22),r=(t.m23+t.m32)*m,e=.25/m,n=(t.m12-t.m21)*m,a=(t.m31-t.m13)*m;return Quaternion.from(a,r,e,n)}}static conjugate(t){return Quaternion.from(-t.x,-t.y,-t.z,t.w)}static norm(t){return t.x*t.x+t.y*t.y+t.z*t.z}static axis(t){return 0==t.x&&0==t.y&&0==t.z?Vector3D.j():Vector3D.unit(t)}static angle(t){let m=Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z),r=t.w;if(m>Number.MAX_VALUE){const e=Math.max(Math.abs(t.x),Math.max(Math.abs(t.y),Math.abs(t.z))),n=t.x/e,a=t.y/e,s=t.z/e;m=Math.sqrt(n*n+a*a+s*s),r/=e}return 114.59155902616465*Math.atan2(m,r)}static toRotationMatrix(t){var m=Matrix3D.identity(),r=t.x,e=t.y,n=t.z,a=t.w;return m.m11=1-2*e*e-2*n*n,m.m12=2*r*e+2*a*n,m.m13=2*r*n-2*a*e,m.m21=2*r*e-2*a*n,m.m22=1-2*r*r-2*n*n,m.m23=2*e*n+2*a*r,m.m31=2*a*e+2*r*n,m.m32=2*e*n-2*a*r,m.m33=1-2*r*r-2*e*e,m}static invert(t){const m=1/Quaternion.norm(t),r=Quaternion.conjugate(t);return r.x*=m,r.y*=m,r.z*=m,r.w*=m,r}static multiply(t,m){return Quaternion.from(t.w*m.x+t.x+m.w+t.y*m.z-t.z*m.y,t.w*m.y-t.x*m.z+t.y*m.w+t.z*m.x,t.w*m.z+t.x*m.y-t.y*m.x+t.z*m.w,t.w*m.w-t.x*m.x-t.y*m.y-t.z*m.z)}static dot(t,m){return Quaternion.multiply(t,Quaternion.conjugate(m)).w}}m.Quaternion=Quaternion}(m.LinearAlgebra||(m.LinearAlgebra={}))}(t.Geometry||(t.Geometry={}))}(Pacem||(Pacem={})),function(t){!function(t){function m(t){return"number"==typeof t&&(t={real:t,img:0}),t}var r;function e(t,m){const r={};return Object.defineProperty(r,"real",{value:t,writable:!1}),Object.defineProperty(r,"img",{value:m,writable:!1}),r}function n(){return r||(r=e(Number.NaN,Number.NaN))}t.Complex=class Complex{static build(t,m){return this.isComplex(t)?t:e(t,m||0)}static add(t,r){const n=m(t),a=m(r);return e(n.real+a.real,n.img+a.img)}static subtract(t,r){const n=m(t),a=m(r);return e(n.real-a.real,n.img-a.img)}static multiply(t,r){const n=m(t),a=m(r);return e(n.real*a.real-n.img*a.img,n.real*a.img+n.img*a.real)}static divide(t,r){const a=m(t),s=m(r),i=this.absSquare(s).roundoff();if(0===i)return n();const o=1/i;return e(o*(a.real*s.real+a.img*s.img),o*(a.img*s.real-a.real*s.img))}static absSquare(t){const r=m(t);return Math.pow(r.real,2)+Math.pow(r.img,2)}static modulus(t){return Math.sqrt(this.absSquare(t))}static isComplex(t){return null!=t&&"object"==typeof t&&"real"in t&&"img"in t&&"number"==typeof t.real&&"number"==typeof t.img}static conjugate(t){return e((t=m(t)).real,0==Math.abs(t.img)?0:-t.img)}static get NaC(){return n()}}}(t.Mathematics||(t.Mathematics={}))}(Pacem||(Pacem={})),function(t){!function(t){!function(m){const r={};function e(m,e){const n=r[e]=r[e]||{};return n[m]=n[m]||function(m,r){const e=2*Math.PI*m/r;return t.Complex.build(Math.cos(e),Math.sin(e))}(m,e)}function n(m){const r=[],a=m.length;if(1===a)return[t.Complex.build(m[0])];const s=n(m.filter(((t,m)=>m%2==0))),i=n(m.filter(((t,m)=>m%2==1)));for(var o=0;o<a/2;o++){const m=s[o],n=t.Complex.multiply(e(o,a),i[o]);r[o]=t.Complex.add(m,n),r[o+a/2]=t.Complex.subtract(m,n)}return r}m.Fourier=class Fourier{static transform(t,m=!0){return(r=(t=t||[]).length)>0&&0==(r&r-1)?this.fft(t,m):this.dft(t,m);var r}static invert(t,m=!0){return this.idft(t||[],m)}static dft(m,r=!0){var n;const a=null===(n=m||[])||void 0===n?void 0:n.length,s=r?1/Math.sqrt(a):1,i=[];for(let r=0;r<a;r++){i.push({real:0,img:0});for(let n=0;n<a;n++){const o=e(r*n,a),f=t.Complex.multiply(m[n],o),c=t.Complex.multiply(f,s);i[r]=t.Complex.add(i[r],c)}}return i}static idft(m,r=!0){const e=m.map((m=>t.Complex.build(m.img,m.real)));return this.transform(e,r).map((m=>t.Complex.build(m.img,m.real)))}static fft(m,r=!0){const e=n(m);if(!r)return e;const a=1/Math.sqrt(m.length);return e.map((m=>t.Complex.multiply(m,a)))}}}(t.DataAnalysis||(t.DataAnalysis={}))}(t.Mathematics||(t.Mathematics={}))}(Pacem||(Pacem={})),function(t){!function(t){!function(t){const m=Math.sqrt(Math.PI),r=function(t){let m,r,e;return r=Math.abs(t),m=1/(1+.5*r),e=m*Math.exp(-r*r-1.26551223+m*(1.00002368+m*(.37409196+m*(.09678418+m*(m*(.27886807+m*(m*(1.48851587+m*(.17087277*m-.82215223))-1.13520398))-.18628806))))),t>=0?e:2-e};class Gaussian{constructor(t,m){this.mean=t,this.stdev=Math.abs(m),this.variance=Math.pow(m,2)}static get normal(){return e}probabilityDensity(t){const r=this.stdev*Math.SQRT2*m;return Math.exp(-.5*Math.pow(this._z(t),2))/r}_z(t){return(t-this.mean)/this.stdev}probability(t){return.5*r(-this._z(t)/Math.SQRT2)}}t.Gaussian=Gaussian;const e=new Gaussian(0,1)}(t.DataAnalysis||(t.DataAnalysis={}))}(t.Mathematics||(t.Mathematics={}))}(Pacem||(Pacem={})),function(t){!function(m){!function(m){class Utils{static lcd(...m){if(t.NullChecker.isNullOrEmpty(m)||m.length<=1)throw"Insufficient set of numbers.";function r(t,m){return m?r(m,t%m):0===m?t:NaN}function e(t,m){return t*m/r(t,m)}let n=Math.round(m[0]);for(let t=1;t<m.length;t++)n=e(n,Math.round(m[t]));return n}static gcd(t,m){return t=Math.round(t),m=Math.round(m),0===t?m:Utils.gcd(m%t,t)}}m.Utils=Utils}(m.NumberTheory||(m.NumberTheory={}))}(t.Mathematics||(t.Mathematics={}))}(Pacem||(Pacem={})),function(t){!function(t){!function(t){function m(t,m=!1){const r=this._varNum(t);return Math.sqrt(r/(t.length+(m?1:0)))}t.Utils=class Utils{static sum(t){return t.reduce(((t,m)=>t+m),0)}static mean(t){return this.sum(t)/t.length}static var(t){return function(t){const m=this.mean(t);return t.reduce(((t,r)=>Math.pow(r-m,2)+t),0)}(t)/t.length}static pstdev(t){return m(t,!1)}static sstdev(t){return m(t,!0)}static gaussian(m,r){return new t.Gaussian(m,r)}}}(t.DataAnalysis||(t.DataAnalysis={}))}(t.Mathematics||(t.Mathematics={}))}(Pacem||(Pacem={}));